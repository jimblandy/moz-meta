ac_add_options --enable-application=js
mk_add_options MOZ_OBJDIR=obj-shell-asan

# Adjust this to the number of CPU cores + 2
mk_add_options MOZ_MAKE_FLAGS=-j64

ac_add_options --enable-address-sanitizer
ac_add_options --enable-undefined-sanitizer
ac_add_options --enable-fuzzing

export ASAN_OPTIONS="detect_leaks=0"
export RUSTFLAGS="$RUSTFLAGS -Zsanitizer=address"

# Ensure you set this to your LLVM_HOME path
export LLVM_HOME="$HOME/.mozbuild/clang"

# Set CC/CXX based on LLVM_HOME
export CC="$LLVM_HOME/bin/clang"
export CXX="$LLVM_HOME/bin/clang++"

# This will ensure the symbolizer is packaged with the binary
export LLVM_SYMBOLIZER="$LLVM_HOME/bin/llvm-symbolizer"

ac_add_options --disable-jemalloc

# Keep symbols to symbolize ASan traces later
export MOZ_DEBUG_SYMBOLS=1
ac_add_options --enable-debug-symbols
ac_add_options --disable-install-strip
#ac_add_options --disable-tests
#ac_add_options --enable-cpp-rtti # needed for -fsanitize=vptr


# Settings for an opt build (preferred)
# The -gline-tables-only ensures that all the necessary debug information for ASan
# is present, but the rest is stripped so the resulting binaries are smaller.
ac_add_options --enable-valgrind
# ac_add_options --disable-optimize
# ac_add_options --enable-optimize="-O0 -g"
ac_add_options --enable-optimize="-O2 -gline-tables-only"
ac_add_options --disable-debug
